#generated by the Ahaggar framework

<function_decl> get_current() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/current.h:12]

<function_decl> native_save_fl() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/irqflags.h:11]

<function_decl> native_irq_disable() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/irqflags.h:37]

<function_decl> native_irq_enable() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/irqflags.h:42]

<function_decl> arch_local_save_flags() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/irqflags.h:65]
  <@0x7fd1ffd92780> native_save_fl() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/irqflags.h:67]

<function_decl> arch_local_irq_disable() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/irqflags.h:75]
  <@0x7fd1ffda7f00> native_irq_disable() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/irqflags.h:77]

<function_decl> arch_local_irq_enable() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/irqflags.h:80]
  <@0x7fd1ffd92980> native_irq_enable() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/irqflags.h:82]

<function_decl> arch_irqs_disabled_flags(long unsigned int  flags) [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/irqflags.h:155]

<function_decl> current_thread_info() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/thread_info.h:208]

<function_decl> write_seqcount_begin(struct seqcount_t* s) [include/linux/seqlock.h:230]

<function_decl> write_seqcount_end(struct seqcount_t* s) [include/linux/seqlock.h:236]

<function_decl> debug_objects_early_init() [include/linux/debugobjects.h:99]

<function_decl> debug_objects_mem_init() [include/linux/debugobjects.h:100]

<function_decl> __rcu_read_lock() [include/linux/rcupdate.h:188]
  <@0x7fd1ffdbf800> current_thread_info() [include/linux/rcupdate.h:190]

<function_decl> __rcu_read_unlock() [include/linux/rcupdate.h:193]
  <@0x7fd1ffdbfd00> current_thread_info() [include/linux/rcupdate.h:195]

<function_decl> smp_prepare_boot_cpu() [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/smp.h:103]

<function_decl> smp_prepare_cpus(unsigned int  max_cpus) [/mnt/hacks/code/kernel/linux/arch/x86/include/asm/smp.h:108]

<function_decl> jump_label_init() [include/linux/jump_label.h:140]

<function_decl> mm_init_cpumask(struct mm_struct * mm) [include/linux/mm_types.h:445]

<function_decl> lockup_detector_init() [include/linux/sched.h:302]

<function_decl> task_pid(struct task_struct * task) [include/linux/sched.h:1656]

<function_decl> task_pid_nr(struct task_struct * tsk) [include/linux/sched.h:1699]

<function_decl> ftrace_init() [include/linux/ftrace.h:646]

<function_decl> boot_init_stack_canary() [include/linux/stackprotector.h:11]

<function_decl> security_init() [include/linux/security.h:1847]

<function_decl> page_cgroup_init_flatmem() [include/linux/page_cgroup.h:33]

<function_decl> sfi_init_late() [include/linux/sfi.h:191]

<function_decl> set_reset_devices(char * str) [init/main.c:144]

<function_decl> debug_kernel(char * str) [init/main.c:195]

<function_decl> quiet_kernel(char * str) [init/main.c:201]

<function_decl> init_setup(char * str) [init/main.c:291]

<function_decl> rdinit_setup(char * str) [init/main.c:308]

<function_decl> do_ctors() [init/main.c:647]

<function_decl> loglevel(char * str) [init/main.c:210]
  <@0x7fd1ffd27da8> get_option(<addr_expr> <parm_decl> &str, <addr_expr> <var_decl> &newlevel) [init/main.c:219]

<function_decl> do_one_initcall_debug(int (*initcall_t)(null) fn) [init/main.c:662]
  <@0x7fd1ffd92200> get_current() [init/main.c:668]
  <@0x7fd1ffd82440> task_pid_nr(
    <@0x7fd1ffd92200> get_current()) [init/main.c:668]
  <@0x7fd1ffd91130> printk(<addr_expr> <string_cst> "\17calling ...", <parm_decl> fn, 
    <@0x7fd1ffd82440> task_pid_nr(
      <@0x7fd1ffd92200> get_current())) [init/main.c:668]
  <@0x7fd1ffd92280> ktime_get() [init/main.c:669]
  <@0x7fd1ffd92380> ktime_get() [init/main.c:671]
  <@0x7fd1ffd8f8c0> printk(<addr_expr> <string_cst> "\17initcall...", <parm_decl> fn, , <ssa_name> <var_decl> <unnamed>_9 >> <integer_cst> 10) [init/main.c:674]

<function_decl> boot_cpu_init() [init/main.c:431]
  <@0x7fd1ffd91558> set_cpu_online((unsigned int ) <ssa_name> <var_decl> cpu_6, <integer_cst> 1) [init/main.c:435]
  <@0x7fd1ffd915f0> set_cpu_active((unsigned int ) <ssa_name> <var_decl> cpu_6, <integer_cst> 1) [init/main.c:436]
  <@0x7fd1ffd91688> set_cpu_present((unsigned int ) <ssa_name> <var_decl> cpu_6, <integer_cst> 1) [init/main.c:437]
  <@0x7fd1ffd91720> set_cpu_possible((unsigned int ) <ssa_name> <var_decl> cpu_6, <integer_cst> 1) [init/main.c:438]

<function_decl> setup_command_line(char * command_line) [init/main.c:341]
  <@0x7fd1ffd82d48> strlen(<addr_expr> <var_decl> &boot_command_line) [init/main.c:343]
  <@0x7fd1ffd917b8> __alloc_bootmem(<ssa_name> <var_decl> <unnamed>_1 + <integer_cst> 1u, <integer_cst> 64ul, <integer_cst> 0ul) [init/main.c:343]
  <@0x7fd1ffd82dd0> strlen(<parm_decl> command_line) [init/main.c:344]
  <@0x7fd1ffd91850> __alloc_bootmem(<ssa_name> <var_decl> <unnamed>_5 + <integer_cst> 1u, <integer_cst> 64ul, <integer_cst> 0ul) [init/main.c:344]
  <@0x7fd1ffd918e8> strcpy(saved_command_line, <addr_expr> <var_decl> &boot_command_line) [init/main.c:345]
  <@0x7fd1ffd91980> strcpy(static_command_line, <parm_decl> command_line) [init/main.c:346]

<function_decl> mm_init() [init/main.c:454]
  <@0x7fd1ffda7c80> page_cgroup_init_flatmem() [init/main.c:460]
  <@0x7fd1ffda7d00> mem_init() [init/main.c:461]
  <@0x7fd1ffda7d80> kmem_cache_init() [init/main.c:462]
  <@0x7fd1ffda7e00> percpu_init_late() [init/main.c:463]
  <@0x7fd1ffda7e80> vmalloc_init() [init/main.c:465]

<function_decl> rcu_lock_acquire(struct lockdep_map * map) [include/linux/rcupdate.h:312]
  <@0x7fd1ffd28508> lock_acquire(<parm_decl> map, <integer_cst> 0u, <integer_cst> 0, <integer_cst> 2, <integer_cst> 1, <pointer_type> <integer_cst> 0, (long unsigned int ) <addr_expr> ) [include/linux/rcupdate.h:314]

<function_decl> rcu_read_lock() [include/linux/rcupdate.h:757]
  <@0x7fd1ffdbf380> __rcu_read_lock() [include/linux/rcupdate.h:759]
  <@0x7fd1ffd823b8> rcu_lock_acquire(<addr_expr> <var_decl> &rcu_lock_map) [include/linux/rcupdate.h:761]
  <@0x7fd1ffdbf400> debug_lockdep_rcu_enabled() [include/linux/rcupdate.h:762]
  <@0x7fd1ffdbf680> rcu_is_cpu_idle() [include/linux/rcupdate.h:762]
  <@0x7fd1ffd91be0> lockdep_rcu_suspicious(<addr_expr> <string_cst> "include/li...", <integer_cst> 763, <addr_expr> <string_cst> "rcu_read_l...") [include/linux/rcupdate.h:762]

<function_decl> rcu_lock_release(struct lockdep_map * map) [include/linux/rcupdate.h:317]
  <@0x7fd1ffd91d10> lock_release(<parm_decl> map, <integer_cst> 1, (long unsigned int ) <addr_expr> ) [include/linux/rcupdate.h:319]

<function_decl> rcu_read_unlock() [include/linux/rcupdate.h:781]
  <@0x7fd1ffdbf880> debug_lockdep_rcu_enabled() [include/linux/rcupdate.h:783]
  <@0x7fd1ffdbfb00> rcu_is_cpu_idle() [include/linux/rcupdate.h:783]
  <@0x7fd1ffd91c78> lockdep_rcu_suspicious(<addr_expr> <string_cst> "include/li...", <integer_cst> 784, <addr_expr> <string_cst> "rcu_read_u...") [include/linux/rcupdate.h:783]
  <@0x7fd1ffd82330> rcu_lock_release(<addr_expr> <var_decl> &rcu_lock_map) [include/linux/rcupdate.h:785]
  <@0x7fd1ffdbfc80> __rcu_read_unlock() [include/linux/rcupdate.h:787]

<function_decl> rest_init() [init/main.c:360]
  <@0x7fd1ffdbf000> rcu_scheduler_starting() [init/main.c:364]
  <@0x7fd1ffd91a18> kernel_thread(<addr_expr> <function_decl> kernel_init , <pointer_type> <integer_cst> 0, <integer_cst> 2560ul) [init/main.c:370]
  <@0x7fd1ffdbf080> numa_default_policy() [init/main.c:371]
  <@0x7fd1ffd91ab0> kernel_thread(<addr_expr> <function_decl> kthreadd , <pointer_type> <integer_cst> 0, <integer_cst> 1536ul) [init/main.c:372]
  <@0x7fd1ffdbf100> rcu_read_lock() [init/main.c:373]
  <@0x7fd1ffd91b48> find_task_by_pid_ns(
    <@0x7fd1ffd91ab0> kernel_thread(<addr_expr> <function_decl> kthreadd , <pointer_type> <integer_cst> 0, <integer_cst> 1536ul), <addr_expr> <var_decl> &init_pid_ns) [init/main.c:374]
  <@0x7fd1ffdbf180> rcu_read_unlock() [init/main.c:375]
  <@0x7fd1ffd82ee0> complete(<addr_expr> <var_decl> &kthreadd_done) [init/main.c:376]
  <@0x7fd1ffdbf200> get_current() [init/main.c:382]
  <@0x7fd1ffd82f68> init_idle_bootup_task(
    <@0x7fd1ffdbf200> get_current()) [init/main.c:382]
  <@0x7fd1ffdbf280> schedule_preempt_disabled() [init/main.c:383]
  <@0x7fd1ffdbf300> cpu_idle() [init/main.c:385]

<function_decl> spin_lock(struct spinlock_t* lock) [include/linux/spinlock.h:283]
  <@0x7fd1ffdcba18> _raw_spin_lock(<addr_expr> <component_ref> <component_ref> <ssa_name> <parm_decl> &lock_1-><unnamed>.rlock) [include/linux/spinlock.h:285]

<function_decl> task_lock(struct task_struct * p) [include/linux/sched.h:2452]
  <@0x7fd1ffdcb990> spin_lock(<addr_expr> <component_ref> <ssa_name> <parm_decl> &p_1->alloc_lock) [include/linux/sched.h:2454]

<function_decl> spin_unlock(struct spinlock_t* lock) [include/linux/spinlock.h:323]
  <@0x7fd1ffdcbb28> _raw_spin_unlock(<addr_expr> <component_ref> <component_ref> <ssa_name> <parm_decl> &lock_1-><unnamed>.rlock) [include/linux/spinlock.h:325]

<function_decl> task_unlock(struct task_struct * p) [include/linux/sched.h:2457]
  <@0x7fd1ffdcbaa0> spin_unlock(<addr_expr> <component_ref> <ssa_name> <parm_decl> &p_1->alloc_lock) [include/linux/sched.h:2459]

<function_decl> set_mems_allowed(struct nodemask_t nodemask) [include/linux/cpuset.h:113]
  <@0x7fd1ffdc7e80> get_current() [include/linux/cpuset.h:115]
  <@0x7fd1ffdcb770> task_lock(
    <@0x7fd1ffdc7e80> get_current()) [include/linux/cpuset.h:115]
  <@0x7fd1ffdc7f00> get_current() [include/linux/cpuset.h:116]
  <@0x7fd1ffdcb7f8> write_seqcount_begin(<addr_expr> <component_ref> <ssa_name> <var_decl> &<unnamed>_2->mems_allowed_seq) [include/linux/cpuset.h:116]
  <@0x7fd1ffdc7f80> get_current() [include/linux/cpuset.h:117]
  <@0x7fd1ffdd3000> get_current() [include/linux/cpuset.h:118]
  <@0x7fd1ffdcb880> write_seqcount_end(<addr_expr> <component_ref> <ssa_name> <var_decl> &<unnamed>_5->mems_allowed_seq) [include/linux/cpuset.h:118]
  <@0x7fd1ffdd3080> get_current() [include/linux/cpuset.h:119]
  <@0x7fd1ffdcb908> task_unlock(
    <@0x7fd1ffdd3080> get_current()) [include/linux/cpuset.h:119]

<function_decl> usermodehelper_enable() [include/linux/kmod.h:99]
  <@0x7fd1ffdcbcc0> __usermodehelper_set_disable_depth(<integer_cst> 0u) [include/linux/kmod.h:101]

<function_decl> repair_env_string(char * param, char * val, const char * unused) [init/main.c:230]
  <@0x7fd1ffdcb2a8> strlen(<parm_decl> param) [init/main.c:234]
  <@0x7fd1ffdcb6e8> strlen(<parm_decl> param) [init/main.c:236]
  <@0x7fd1ffdcbee0> strlen(<parm_decl> val) [init/main.c:238]
  <@0x7fd1ffdce1c8> memmove(<ssa_name> <parm_decl> val_1 + <integer_cst> 18446744073709551615u, <parm_decl> val, <ssa_name> <var_decl> <unnamed>_11 + <integer_cst> 1u) [init/main.c:238]
  <@0x7fd1ffdd3980> __builtin_unreachable() [init/main.c:241]

<function_decl> run_init_process(const char * init_filename) [init/main.c:797]
  <@0x7fd1ffdce260> do_execve(<parm_decl> init_filename, <addr_expr> <var_decl> &argv_init, <addr_expr> <var_decl> &envp_init) [init/main.c:800]

<function_decl> obsolete_checksetup(char * line) [init/main.c:158]
  <@0x7fd1ffde2198> strlen(<component_ref> <ssa_name> <var_decl> p_1->str) [init/main.c:165]
  <@0x7fd1ffdce558> parameqn(<parm_decl> line, <component_ref> <ssa_name> <var_decl> p_1->str, (long unsigned int ) <ssa_name> <var_decl> n_9) [init/main.c:166]
  <@0x7fd1ffdce5f0> printk(<addr_expr> <string_cst> "\14Paramete...", <component_ref> <ssa_name> <var_decl> p_1->str) [init/main.c:175]

<function_decl> unknown_bootoption(char * param, char * val, const char * unused) [init/main.c:250]
  <@0x7fd1ffdce2f8> repair_env_string(<parm_decl> param, <parm_decl> val, <parm_decl> unused) [init/main.c:252]
  <@0x7fd1ffde2000> obsolete_checksetup(<parm_decl> param) [init/main.c:255]
  <@0x7fd1ffdce390> strchr(<parm_decl> param, <integer_cst> 46) [init/main.c:259]
  <@0x7fd1ffdce428> strchr(<parm_decl> param, <integer_cst> 46) [init/main.c:259]
  <@0x7fd1ffdce4c0> strncmp(<parm_decl> param, , (long unsigned int ) <ssa_name> <var_decl> <unnamed>_18) [init/main.c:273]

<function_decl> do_early_param(char * param, char * val, const char * unused) [init/main.c:389]
  <@0x7fd1ffdce720> parameq(<parm_decl> param, <component_ref> <ssa_name> <var_decl> p_1->str) [init/main.c:394]
  <@0x7fd1ffdce7b8> strcmp(<parm_decl> param, <addr_expr> <string_cst> "console") [init/main.c:395]
  <@0x7fd1ffdce850> strcmp(<component_ref> <ssa_name> <var_decl> p_1->str, <addr_expr> <string_cst> "earlycon") [init/main.c:396]
  <@0x7fd1ffdce8e8> printk(<addr_expr> <string_cst> "\14Malforme...", <parm_decl> param) [init/main.c:399]

<function_decl> parse_early_options(char * cmdline) [init/main.c:407]
  <@0x7fd1ffd28678> parse_args(<addr_expr> <string_cst> "early opti...", <parm_decl> cmdline, <pointer_type> <integer_cst> 0, <integer_cst> 0u, <integer_cst> 0, <integer_cst> 0, <addr_expr> <function_decl> do_early_param ) [init/main.c:409]

<function_decl> parse_early_param() [init/main.c:413]
  <@0x7fd1ffdce688> strlcpy(<addr_expr> <var_decl> &tmp_cmdline, <addr_expr> <var_decl> &boot_command_line, <integer_cst> 2048u) [init/main.c:422]
  <@0x7fd1ffde2330> parse_early_options(<addr_expr> <var_decl> &tmp_cmdline) [init/main.c:423]

<function_decl> smp_setup_processor_id() [init/main.c:441]

<function_decl> thread_info_cache_init() [init/main.c:446]

<function_decl> start_kernel() [init/main.c:468]
  <@0x7fd1ffd92a00> lockdep_init() [init/main.c:477]
  <@0x7fd1ffd92a80> smp_setup_processor_id() [init/main.c:478]
  <@0x7fd1ffd92b00> debug_objects_early_init() [init/main.c:479]
  <@0x7fd1ffd92b80> boot_init_stack_canary() [init/main.c:484]
  <@0x7fd1ffd92c00> cgroup_init_early() [init/main.c:486]
  <@0x7fd1ffd92c80> arch_local_irq_disable() [init/main.c:488]
  <@0x7fd1ffd92d00> trace_hardirqs_off() [init/main.c:488]
  <@0x7fd1ffd92d80> tick_init() [init/main.c:495]
  <@0x7fd1ffd92e00> boot_cpu_init() [init/main.c:496]
  <@0x7fd1ffd911c8> printk(<addr_expr> <string_cst> "\15%s", <addr_expr> <var_decl> &linux_banner) [init/main.c:498]
  <@0x7fd1ffd82550> setup_arch(<addr_expr> <var_decl> &command_line) [init/main.c:499]
  <@0x7fd1ffd91260> mm_init_owner(<addr_expr> <var_decl> &init_mm, <addr_expr> <var_decl> &init_task) [init/main.c:500]
  <@0x7fd1ffd82660> setup_command_line(command_line) [init/main.c:502]
  <@0x7fd1ffd92e80> setup_nr_cpu_ids() [init/main.c:503]
  <@0x7fd1ffd92f00> setup_per_cpu_areas() [init/main.c:504]
  <@0x7fd1ffd92f80> smp_prepare_boot_cpu() [init/main.c:505]
  <@0x7fd1ffd912f8> build_all_zonelists(<pointer_type> <integer_cst> 0, <pointer_type> <integer_cst> 0) [init/main.c:507]
  <@0x7fd1ffd9f000> page_alloc_init() [init/main.c:508]
  <@0x7fd1ffd91390> printk(<addr_expr> <string_cst> "\15Kernel c...", <addr_expr> <var_decl> &boot_command_line) [init/main.c:510]
  <@0x7fd1ffd9f080> parse_early_param() [init/main.c:511]
  <@0x7fd1ffd28450> parse_args(<addr_expr> <string_cst> "Booting ke...", static_command_line, <addr_expr> <var_decl> &__start___param, (unsigned int ) <ssa_name> <var_decl> <unnamed>_5, <integer_cst> -1, <integer_cst> -1, <addr_expr> <function_decl> unknown_bootoption ) [init/main.c:512]
  <@0x7fd1ffd9f100> jump_label_init() [init/main.c:516]
  <@0x7fd1ffd826e8> setup_log_buf(<integer_cst> 0) [init/main.c:522]
  <@0x7fd1ffd9f180> pidhash_init() [init/main.c:523]
  <@0x7fd1ffd9f200> vfs_caches_init_early() [init/main.c:524]
  <@0x7fd1ffd9f280> sort_main_extable() [init/main.c:525]
  <@0x7fd1ffd9f300> trap_init() [init/main.c:526]
  <@0x7fd1ffd9f380> mm_init() [init/main.c:527]
  <@0x7fd1ffd9f400> sched_init() [init/main.c:534]
  <@0x7fd1ffd9f480> current_thread_info() [init/main.c:539]
  <@0x7fd1ffd9f500> arch_local_save_flags() [init/main.c:540]
  <@0x7fd1ffd82770> arch_irqs_disabled_flags(
    <@0x7fd1ffd9f500> arch_local_save_flags()) [init/main.c:540]
  <@0x7fd1ffd827f8> printk(<addr_expr> <string_cst> "\14start_ke...") [init/main.c:541]
  <@0x7fd1ffd9f680> arch_local_irq_disable() [init/main.c:543]
  <@0x7fd1ffd9f700> trace_hardirqs_off() [init/main.c:543]
  <@0x7fd1ffd9f780> idr_init_cache() [init/main.c:545]
  <@0x7fd1ffd9f800> perf_event_init() [init/main.c:546]
  <@0x7fd1ffd9f880> rcu_init() [init/main.c:547]
  <@0x7fd1ffd9f900> radix_tree_init() [init/main.c:548]
  <@0x7fd1ffd9f980> early_irq_init() [init/main.c:550]
  <@0x7fd1ffd9fa00> init_IRQ() [init/main.c:551]
  <@0x7fd1ffd9fa80> init_timers() [init/main.c:552]
  <@0x7fd1ffd9fb00> hrtimers_init() [init/main.c:553]
  <@0x7fd1ffd9fb80> softirq_init() [init/main.c:554]
  <@0x7fd1ffd9fc00> timekeeping_init() [init/main.c:555]
  <@0x7fd1ffd9fc80> time_init() [init/main.c:556]
  <@0x7fd1ffd9fd00> profile_init() [init/main.c:557]
  <@0x7fd1ffd9fd80> call_function_init() [init/main.c:558]
  <@0x7fd1ffd9fe00> arch_local_save_flags() [init/main.c:559]
  <@0x7fd1ffd82880> arch_irqs_disabled_flags(
    <@0x7fd1ffd9fe00> arch_local_save_flags()) [init/main.c:559]
  <@0x7fd1ffd82908> printk(<addr_expr> <string_cst> "\12start_ke...") [init/main.c:560]
  <@0x7fd1ffd9ff80> trace_hardirqs_on() [init/main.c:563]
  <@0x7fd1ffda1000> arch_local_irq_enable() [init/main.c:563]
  <@0x7fd1ffda1080> kmem_cache_init_late() [init/main.c:565]
  <@0x7fd1ffda1100> console_init() [init/main.c:572]
  <@0x7fd1ffd91428> panic(panic_later, panic_param) [init/main.c:574]
  <@0x7fd1ffda1280> lockdep_info() [init/main.c:576]
  <@0x7fd1ffda1300> locking_selftest() [init/main.c:583]
  <@0x7fd1ffd82990> __phys_addr(initrd_start) [init/main.c:587]
  <@0x7fd1ffd82a18> __phys_addr(initrd_start) [init/main.c:590]
  <@0x7fd1ffd914c0> printk(<addr_expr> <string_cst> "\12initrd o...", (long unsigned int ) <ssa_name> <var_decl> <unnamed>_44, min_low_pfn) [init/main.c:588]
  <@0x7fd1ffda1680> page_cgroup_init() [init/main.c:595]
  <@0x7fd1ffda1700> debug_objects_mem_init() [init/main.c:596]
  <@0x7fd1ffda1780> kmemleak_init() [init/main.c:597]
  <@0x7fd1ffda1800> setup_per_cpu_pageset() [init/main.c:598]
  <@0x7fd1ffda1880> numa_policy_init() [init/main.c:599]
  <@0x7fd1ffda1a80> sched_clock_init() [init/main.c:602]
  <@0x7fd1ffda1b00> calibrate_delay() [init/main.c:603]
  <@0x7fd1ffda1b80> pidmap_init() [init/main.c:604]
  <@0x7fd1ffda1c00> anon_vma_init() [init/main.c:605]
  <@0x7fd1ffda1d80> efi_enter_virtual_mode() [init/main.c:608]
  <@0x7fd1ffda1e00> thread_info_cache_init() [init/main.c:610]
  <@0x7fd1ffda1e80> cred_init() [init/main.c:611]
  <@0x7fd1ffd82aa0> fork_init(totalram_pages) [init/main.c:612]
  <@0x7fd1ffda1f00> proc_caches_init() [init/main.c:613]
  <@0x7fd1ffda1f80> buffer_init() [init/main.c:614]
  <@0x7fd1ffda7000> key_init() [init/main.c:615]
  <@0x7fd1ffda7080> security_init() [init/main.c:616]
  <@0x7fd1ffda7100> dbg_late_init() [init/main.c:617]
  <@0x7fd1ffd82b28> vfs_caches_init(totalram_pages) [init/main.c:618]
  <@0x7fd1ffda7180> signals_init() [init/main.c:619]
  <@0x7fd1ffda7200> page_writeback_init() [init/main.c:621]
  <@0x7fd1ffda7280> proc_root_init() [init/main.c:623]
  <@0x7fd1ffda7300> cgroup_init() [init/main.c:625]
  <@0x7fd1ffda7380> cpuset_init() [init/main.c:626]
  <@0x7fd1ffda7400> taskstats_init_early() [init/main.c:627]
  <@0x7fd1ffda7480> delayacct_init() [init/main.c:628]
  <@0x7fd1ffda7500> check_bugs() [init/main.c:630]
  <@0x7fd1ffda7580> acpi_early_init() [init/main.c:632]
  <@0x7fd1ffda7600> sfi_init_late() [init/main.c:633]
  <@0x7fd1ffda7780> efi_late_init() [init/main.c:636]
  <@0x7fd1ffda7800> efi_free_boot_services() [init/main.c:637]
  <@0x7fd1ffda7880> ftrace_init() [init/main.c:640]
  <@0x7fd1ffda7900> rest_init() [init/main.c:643]

<function_decl> do_one_initcall(int (*initcall_t)(null) fn) [init/main.c:680]
  <@0x7fd1ffd81780> current_thread_info() [init/main.c:682]
  <@0x7fd1ffd82220> do_one_initcall_debug(<parm_decl> fn) [init/main.c:686]
  <@0x7fd1ffd27e40> sprintf(<addr_expr> <var_decl> &msgbuf, <addr_expr> <string_cst> "error code...", <ssa_name> <var_decl> ret_1 = PHI(<ssa_name> <var_decl> ret_6, <ssa_name> <var_decl> ret_7)) [init/main.c:693]
  <@0x7fd1ffd81c00> current_thread_info() [init/main.c:695]
  <@0x7fd1ffd27ed8> strlcat(<addr_expr> <var_decl> &msgbuf, <addr_expr> <string_cst> "preemption...", <integer_cst> 64ul) [init/main.c:696]
  <@0x7fd1ffd81d80> current_thread_info() [init/main.c:697]
  <@0x7fd1ffd81e00> arch_local_save_flags() [init/main.c:699]
  <@0x7fd1ffd822a8> arch_irqs_disabled_flags(
    <@0x7fd1ffd81e00> arch_local_save_flags()) [init/main.c:699]
  <@0x7fd1ffd91000> strlcat(<addr_expr> <var_decl> &msgbuf, <addr_expr> <string_cst> "disabled i...", <integer_cst> 64ul) [init/main.c:700]
  <@0x7fd1ffd81f80> trace_hardirqs_on() [init/main.c:701]
  <@0x7fd1ffd92000> arch_local_irq_enable() [init/main.c:701]
  <@0x7fd1ffd91098> printk(<addr_expr> <string_cst> "initcall %...", <parm_decl> fn, <addr_expr> <var_decl> &msgbuf) [init/main.c:704]

<function_decl> do_pre_smp_initcalls() [init/main.c:789]
  <@0x7fd1ffdcbc38> do_one_initcall() [init/main.c:794]

<function_decl> do_initcall_level(int  level) [init/main.c:746]
  <@0x7fd1ffdce130> strcpy(static_command_line, saved_command_line) [init/main.c:751]
  <@0x7fd1ffd285c0> parse_args(, static_command_line, <addr_expr> <var_decl> &__start___param, (unsigned int ) <ssa_name> <var_decl> <unnamed>_12, (int ) <ssa_name> <var_decl> <unnamed>_7, (int ) <ssa_name> <var_decl> <unnamed>_7, <addr_expr> <function_decl> repair_env_string ) [init/main.c:752]
  <@0x7fd1ffdcbdd0> do_one_initcall() [init/main.c:759]

<function_decl> do_initcalls() [init/main.c:762]
  <@0x7fd1ffdcbd48> do_initcall_level(<ssa_name> <var_decl> level_1 = PHI(<ssa_name> <var_decl> level_2, <ssa_name> <var_decl> level_4)) [init/main.c:767]

<function_decl> do_basic_setup() [init/main.c:777]
  <@0x7fd1ffdd3180> cpuset_init_smp() [init/main.c:779]
  <@0x7fd1ffdd3200> usermodehelper_init() [init/main.c:780]
  <@0x7fd1ffdd3280> shmem_init() [init/main.c:781]
  <@0x7fd1ffdd3300> driver_init() [init/main.c:782]
  <@0x7fd1ffdd3380> init_irq_proc() [init/main.c:783]
  <@0x7fd1ffdd3400> do_ctors() [init/main.c:784]
  <@0x7fd1ffdd3480> usermodehelper_enable() [init/main.c:785]
  <@0x7fd1ffdd3500> do_initcalls() [init/main.c:786]

<function_decl> kernel_init_freeable() [init/main.c:848]
  <@0x7fd1ffdcb330> wait_for_completion(<addr_expr> <var_decl> &kthreadd_done) [init/main.c:853]
  <@0x7fd1ffdcb3b8> set_mems_allowed() [init/main.c:861]
  <@0x7fd1ffdc7780> get_current() [init/main.c:865]
  <@0x7fd1ffd91ed8> set_cpus_allowed_ptr(
    <@0x7fd1ffdc7780> get_current(), <addr_expr> <var_decl> &cpu_all_bits) [init/main.c:865]
  <@0x7fd1ffdc7800> get_current() [init/main.c:867]
  <@0x7fd1ffdcb440> task_pid(
    <@0x7fd1ffdc7800> get_current()) [init/main.c:867]
  <@0x7fd1ffdcb4c8> smp_prepare_cpus(setup_max_cpus) [init/main.c:869]
  <@0x7fd1ffdc7880> do_pre_smp_initcalls() [init/main.c:871]
  <@0x7fd1ffdc7900> lockup_detector_init() [init/main.c:872]
  <@0x7fd1ffdc7980> smp_init() [init/main.c:874]
  <@0x7fd1ffdc7a00> sched_init_smp() [init/main.c:875]
  <@0x7fd1ffdc7a80> do_basic_setup() [init/main.c:877]
  <@0x7fd1ffdce000> sys_open(<addr_expr> <string_cst> "/dev/conso...", <integer_cst> 2, <integer_cst> 0) [init/main.c:880]
  <@0x7fd1ffdcb550> printk(<addr_expr> <string_cst> "\14Warning:...") [init/main.c:881]
  <@0x7fd1ffdcb5d8> sys_dup(<integer_cst> 0u) [init/main.c:883]
  <@0x7fd1ffdcb660> sys_dup(<integer_cst> 0u) [init/main.c:884]
  <@0x7fd1ffdce098> sys_access(ramdisk_execute_command, <integer_cst> 0) [init/main.c:893]
  <@0x7fd1ffdc7e00> prepare_namespace() [init/main.c:895]

<function_decl> kernel_init(void * unused) [init/main.c:807]
  <@0x7fd1ffdbfd80> kernel_init_freeable() [init/main.c:809]
  <@0x7fd1ffdbfe00> async_synchronize_full() [init/main.c:811]
  <@0x7fd1ffdbfe80> free_initmem() [init/main.c:812]
  <@0x7fd1ffdbff00> mark_rodata_ro() [init/main.c:813]
  <@0x7fd1ffdbff80> numa_default_policy() [init/main.c:815]
  <@0x7fd1ffdc7000> flush_delayed_fput() [init/main.c:817]
  <@0x7fd1ffd82bb0> run_init_process(ramdisk_execute_command) [init/main.c:820]
  <@0x7fd1ffd91da8> printk(<addr_expr> <string_cst> "\14Failed t...", ramdisk_execute_command) [init/main.c:822]
  <@0x7fd1ffd82c38> run_init_process(execute_command) [init/main.c:833]
  <@0x7fd1ffd91e40> printk(<addr_expr> <string_cst> "\14Failed t...", execute_command) [init/main.c:835]
  <@0x7fd1ffd82e58> run_init_process(<addr_expr> <string_cst> "/sbin/init...") [init/main.c:838]
  <@0x7fd1ffdcb000> run_init_process(<addr_expr> <string_cst> "/etc/init") [init/main.c:839]
  <@0x7fd1ffdcb088> run_init_process(<addr_expr> <string_cst> "/bin/init") [init/main.c:840]
  <@0x7fd1ffdcb110> run_init_process(<addr_expr> <string_cst> "/bin/sh") [init/main.c:841]
  <@0x7fd1ffdcb198> panic(<addr_expr> <string_cst> "No init fo...") [init/main.c:844]
